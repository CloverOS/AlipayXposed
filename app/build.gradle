apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def storefile = properties.getProperty('storeFile')
def storepassword = properties.getProperty('storePassword')
def keyalias = properties.getProperty('keyAlias')
def keypassword = properties.getProperty('keyPassword')

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.ykrank.alipayxposed"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 2
        versionName "1.0.1"
        vectorDrawables.useSupportLibrary = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        release {
            storeFile file(storefile)
            storePassword storepassword
            keyAlias keyalias
            keyPassword keypassword
        }
    }
    dataBinding {
        enabled = true
    }
    dexOptions {
        preDexLibraries = Boolean.valueOf(System.getProperty('pre-dex-libraries', 'true'))
    }
    sourceSets {
        main.java.srcDirs += 'build/generated/source/greendao'
    }
    lintOptions {
        abortOnError = Boolean.valueOf(System.getProperty('abort-on-error', 'true'))
        textReport true
        textOutput 'stdout'
        disable 'MissingTranslation'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }
    buildTypes {
        debug {
            multiDexEnabled true
            signingConfig signingConfigs.release
        }
        release {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildTypes.each {
        it.buildConfigField "String", "DB_NAME", '"alipay.db"'
    }
    flavorDimensions "market"
    productFlavors {
        normal {
            dimension "market"
            manifestPlaceholders["APP_CHANNEL"] = "normal"
        }
    }
}

kapt {
    mapDiagnosticLocations = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
//    options.compilerArgs << '-Xlint:unchecked,deprecation'
    options.compilerArgs << "-Xmaxerrs" << "500"
}

greendao {
    schemaVersion 1
}

dependencies {
    implementation project(path: ':lib')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7"

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.nononsenseapps:filepicker:4.1.0'

    implementation 'org.apache.poi:poi:3.17'
}
